// Code generated by MockGen. DO NOT EDIT.
// Source: ./dao/dao.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	ddl "github.com/GameLaunchPad/game_management_project/dao/ddl"
	gomock "github.com/golang/mock/gomock"
)

// MockIGameDAO is a mock of IGameDAO interface.
type MockIGameDAO struct {
	ctrl     *gomock.Controller
	recorder *MockIGameDAOMockRecorder
}

// MockIGameDAOMockRecorder is the mock recorder for MockIGameDAO.
type MockIGameDAOMockRecorder struct {
	mock *MockIGameDAO
}

// NewMockIGameDAO creates a new mock instance.
func NewMockIGameDAO(ctrl *gomock.Controller) *MockIGameDAO {
	mock := &MockIGameDAO{ctrl: ctrl}
	mock.recorder = &MockIGameDAOMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIGameDAO) EXPECT() *MockIGameDAOMockRecorder {
	return m.recorder
}

// CreateGame mocks base method.
func (m *MockIGameDAO) CreateGame(ctx context.Context, game *ddl.GpGame, version *ddl.GpGameVersion) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateGame", ctx, game, version)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateGame indicates an expected call of CreateGame.
func (mr *MockIGameDAOMockRecorder) CreateGame(ctx, game, version interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateGame", reflect.TypeOf((*MockIGameDAO)(nil).CreateGame), ctx, game, version)
}

// CreateGameVersionAndUpdateGame mocks base method.
func (m *MockIGameDAO) CreateGameVersionAndUpdateGame(ctx context.Context, gameID uint64, version *ddl.GpGameVersion) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateGameVersionAndUpdateGame", ctx, gameID, version)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateGameVersionAndUpdateGame indicates an expected call of CreateGameVersionAndUpdateGame.
func (mr *MockIGameDAOMockRecorder) CreateGameVersionAndUpdateGame(ctx, gameID, version interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateGameVersionAndUpdateGame", reflect.TypeOf((*MockIGameDAO)(nil).CreateGameVersionAndUpdateGame), ctx, gameID, version)
}
